# https://d2lang.com

grid-columns: 4

History: {
    class: empty

    Service: {
        label: "History"
        style.multiple: true

        MatchingClient: { label: "Matching client" }
    }
    Service.MatchingClient -> _.Matching.LeafPartitions.A: add task
}

Matching: "Matching Service" {
    grid-rows: 1
    grid-columns: 1

    style.fill: transparent
    style.stroke-dash: 3

    LeafPartitions: {
        class: empty
        A: {
            label: "Leaf Task Queue Partition [A]"
            style.fill: transparent
            style.stroke-dash: 3
        }
        B: {
            label: "Leaf Task Queue Partition [B]"
            style.fill: transparent
            style.stroke-dash: 3
        }
    }
    LeafPartitions.A -> RootPartition: forward "add task"
    LeafPartitions.B -> RootPartition: forward "poll task"

    RootPartition: {
        grid-rows: 2
        grid-columns: 3

        label: "Root Task Queue Partition"
        style.fill: transparent
        style.stroke-dash: 3

        placeholder1.class: empty
        TaskMatcher
        placeholder2.class: empty

        taskWriter
        liveness
        taskReader

        taskWriter -> _.Database: spool tasks
        taskReader -> TaskMatcher: dispatch buffered tasks
        taskReader -> _.Database: fetch tasks
    }

    Database: {
        style.border-radius: 100
    }
}

Frontend: {
    class: empty

    Service: {
        label: "Frontend"
        style.multiple: true
        height: 150

        MatchingClient: { label: "Matching client" }
    }
    Service.MatchingClient -> _.Matching.LeafPartitions.B: poll task
}

Outside: {
    class: empty

    Workers: {
        style.multiple: true
    }
    Workers -> _.Frontend.Service: poll task
}

classes: {
    empty: {
        label: ""
        style: {
            fill: transparent
            stroke: transparent
        }
    }
}